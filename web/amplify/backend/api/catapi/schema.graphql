enum CatAttribute {
  health
  wilderness
  knowledge
}

enum CatStatus {
  inHouse
  stray
  finished
}

type User @model {
  id: ID!
  name: String!
  cats: [Cat] @connection(keyName: "byUser", fields: ["id"])
}

# type Blog @model {
#   id: ID!
#   name: String!
#   posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
# }

type Cat
  @model
  @key(name: "byUser", fields: ["userID"], queryField: "catsByUser") {
  id: ID!
  name: String!
  imgUrl: String!
  health: Int!
  wilderness: Int!
  knowledge: Int!
  age: Int!
  userID: ID!
  user: User @connection(fields: ["userID"])
  # Events the cat has triggered
  eventIds: [ID!]!
  status: CatStatus!
}

# type Post @model @key(name: "byBlog", fields: ["blogID"]) {
#   id: ID!
#   title: String!
#   blogID: ID!
#   blog: Blog @connection(fields: ["blogID"])
#   comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
# }

# type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
#   id: ID!
#   postID: ID!
#   post: Post @connection(fields: ["postID"])
#   content: String!
# }

type EventEffect {
  key: CatAttribute
  delta: Int
}

type Event
  @model
  @key(
    name: "eventsByStatus"
    fields: ["status"]
    queryField: "eventsByStatus"
  ) {
  id: ID!
  # Required cat status that this event can happen to
  status: CatStatus!
  imgUrl: String
  # Event title
  title: String
  # Event content
  content: String
  # Optional result message after user's selection
  result: String
  # Effects when selecting yes
  yesEffects: [EventEffect]
  # Effects when selecting no
  noEffects: [EventEffect]
}
